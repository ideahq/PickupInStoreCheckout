{"version":3,"sources":["webpack://checkout/./src/app/order/OrderSummaryPrice.tsx","webpack://checkout/./src/app/order/getItemsCount.ts","webpack://checkout/./src/app/order/OrderSummarySection.tsx","webpack://checkout/./src/app/order/OrderSummaryTotal.tsx","webpack://checkout/./src/app/ui/icon/IconChevronUp.tsx","webpack://checkout/./src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./src/app/order/mapFromCustom.tsx","webpack://checkout/./src/app/order/getOrderSummaryItemImage.tsx","webpack://checkout/./src/app/order/mapFromDigital.tsx","webpack://checkout/./src/app/order/mapFromGiftCertificate.tsx","webpack://checkout/./src/app/order/mapFromPhysical.tsx","webpack://checkout/./src/app/order/OrderSummaryItem.tsx","webpack://checkout/./src/app/order/OrderSummaryItems.tsx","webpack://checkout/./src/app/order/OrderSummaryDiscount.tsx","webpack://checkout/./src/app/order/OrderSummarySubtotals.tsx","webpack://checkout/./src/app/ui/icon/IconGiftCertificate.tsx","webpack://checkout/./src/app/ui/modal/ModalTrigger.tsx","webpack://checkout/./src/app/order/getLineItemsCount.ts","webpack://checkout/./src/app/order/OrderSummaryModal.tsx","webpack://checkout/./src/app/order/OrderSummaryDrawer.tsx"],"names":["OrderSummaryPrice","_super","_this","apply","this","arguments","state","highlight","previousAmount","handleTransitionEnd","node","done","addEventListener","_a","target","setState","tslib__WEBPACK_IMPORTED_MODULE_0__","getDerivedStateFromProps","props","amount","prototype","render","actionLabel","onActionTriggered","children","className","currencyCode","label","superscript","testId","zeroLabel","displayValue","getDisplayValue","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","data-test","react_transition_group__WEBPACK_IMPORTED_MODULE_3__","addEndListener","classNames","in","timeout","aria-live","classnames__WEBPACK_IMPORTED_MODULE_1___default","href","onClick","Object","_common_dom__WEBPACK_IMPORTED_MODULE_4__","isNumberValue","_currency__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_2__","__webpack_exports__","getItemsCount","physicalItems","digitalItems","giftCertificates","customItems","concat","reduce","total","item","quantity","length","__webpack_require__","d","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_locale__WEBPACK_IMPORTED_MODULE_1__","_locale__WEBPACK_IMPORTED_MODULE_2__","_OrderSummaryPrice__WEBPACK_IMPORTED_MODULE_3__","shopperCurrencyCode","storeCurrencyCode","orderAmount","currency","hasDifferentCurrency","id","undefined","data","toStoreCurrency","code","icon_IconChevronUp","withIconContainer","react_default","height","viewBox","width","xmlns","icon_IconChevronDown","order_mapFromCustom","extendedListPrice","name","getOrderSummaryItemImage","imageUrl","alt","src","getDigitalItemDescription","downloadPageUrl","content","rel","TranslatedString","order_mapFromDigital","amountAfterDiscount","extendedSalePrice","image","productOptions","options","map","option","value","order_mapFromGiftCertificate","IconGiftCertificate","order_mapFromPhysical","comparisonPrice","listPrice","order_OrderSummaryItem","react","index","key","classnames_default","product-price--beforeDiscount","ShopperCurrency","OrderSummaryItems_OrderSummaryItems","OrderSummaryItems","call","handleToggle","isExpanded","tslib","items","count","slice","sort","variantId","summaryItemProps","renderActions","getLineItemCount","type","Component","order_OrderSummaryDiscount","remaining","onRemoved","rest","discountAmount","taxes","shippingAmount","subtotalAmount","handlingAmount","storeCreditAmount","coupons","onRemovedGiftCertificate","onRemovedCoupon","coupon","discountedAmount","displayName","giftCertificate","used","tax","ModalTrigger","isOpen","canHandleEvent","handleOpen","handleClose","componentDidMount","componentWillUnmount","modal","react__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_1__","onRequestClose","getLineItemsCount","renderHeader","headerLink","IconClose","ModalHeader","additionalClassName","order_OrderSummaryModal","additionalLineItems","onAfterOpen","storeCurrency","shopperCurrency","lineItems","orderSummarySubtotalsProps","Modal","additionalBodyClassName","additionalHeaderClassName","header","OrderSummarySection","OrderSummarySubtotals","OrderSummaryTotal","renderModal","cartDrawer-figure--stack","productWithImage","getImage"],"mappings":"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","file":"order-summary-drawer-af8083ee.js","sourcesContent":["import classNames from 'classnames';\nimport React, { Component, ReactNode } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { preventDefault } from '../common/dom';\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryPriceProps {\n    label: ReactNode;\n    amount?: number | null;\n    zeroLabel?: ReactNode;\n    className?: string;\n    testId?: string;\n    currencyCode?: string;\n    superscript?: string;\n    actionLabel?: ReactNode;\n    onActionTriggered?(): void;\n}\n\nexport interface OrderSummaryPriceState {\n    highlight: boolean;\n    previousAmount?: number;\n}\n\nfunction getDisplayValue(amount?: number | null, zeroLabel?: ReactNode): ReactNode | number {\n    const notYetSetSymbol = '--';\n\n    if (typeof amount === 'undefined' || amount === null) {\n        return notYetSetSymbol;\n    }\n\n    if (zeroLabel && amount === 0) {\n        return zeroLabel;\n    }\n\n    return amount;\n}\n\nfunction isNumberValue(displayValue: number | ReactNode): displayValue is number {\n    return typeof displayValue === 'number';\n}\n\nclass OrderSummaryPrice extends Component<OrderSummaryPriceProps, OrderSummaryPriceState> {\n    static getDerivedStateFromProps(props: OrderSummaryPriceProps, state: OrderSummaryPriceState) {\n        return {\n            highlight: props.amount !== state.previousAmount,\n            previousAmount: props.amount,\n        };\n    }\n\n    state = {\n        highlight: false,\n        previousAmount: 0,\n    };\n\n    render(): ReactNode {\n        const {\n            amount,\n            actionLabel,\n            onActionTriggered,\n            children,\n            className,\n            currencyCode,\n            label,\n            superscript,\n            testId,\n            zeroLabel,\n        } = this.props;\n\n        const { highlight } = this.state;\n        const displayValue = getDisplayValue(amount, zeroLabel);\n\n        return (\n            <div data-test={ testId }>\n                <CSSTransition\n                    addEndListener={ this.handleTransitionEnd }\n                    classNames=\"changeHighlight\"\n                    in={ highlight }\n                    timeout={ {} }\n                >\n                    <div\n                        aria-live=\"polite\"\n                        className={ classNames(\n                            'cart-priceItem',\n                            'optimizedCheckout-contentPrimary',\n                            className\n                        ) }\n                    >\n                        <span className=\"cart-priceItem-label\">\n                            <span data-test=\"cart-price-label\">\n                                { label }\n                                { '  ' }\n                            </span>\n                            { currencyCode && <span className=\"cart-priceItem-currencyCode\">\n                                { `(${currencyCode}) ` }\n                            </span> }\n                            { onActionTriggered && actionLabel && <span className=\"cart-priceItem-link\">\n                                <a\n                                    data-test=\"cart-price-callback\"\n                                    href=\"#\"\n                                    onClick={ preventDefault(onActionTriggered) }\n                                >\n                                    { actionLabel }\n                                </a>\n                            </span> }\n                        </span>\n\n                        <span className=\"cart-priceItem-value\">\n                            <span data-test=\"cart-price-value\">\n                                { isNumberValue(displayValue) ?\n                                    <ShopperCurrency amount={ displayValue } /> :\n                                    displayValue }\n                            </span>\n\n                            { superscript && <sup data-test=\"cart-price-value-superscript\">\n                                { superscript }\n                            </sup> }\n                        </span>\n\n                        { children }\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n\n    private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\n        const { previousAmount } = this.state;\n\n        node.addEventListener('animationend', ({ target }) => {\n            if (target === node) {\n                this.setState({\n                    highlight: false,\n                    previousAmount,\n                });\n                done();\n            }\n        });\n    };\n}\n\nexport default OrderSummaryPrice;\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    const totalItemsCount = [\n        ...physicalItems,\n        ...digitalItems,\n        ...(customItems || []),\n    ].reduce((total, item) => total += item.quantity, 0);\n\n    return totalItemsCount + giftCertificates.length;\n}\n","import React, { FunctionComponent } from 'react';\n\nconst OrderSummarySection: FunctionComponent = ({\n    children,\n}) => (\n    <section className=\"cart-section optimizedCheckout-orderSummary-cartSection\">\n        { children }\n    </section>\n);\n\nexport default OrderSummarySection;\n","import React, { Fragment, FunctionComponent } from 'react';\n\nimport { withCurrency, TranslatedString, WithCurrencyProps } from '../locale';\n\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummaryTotalProps {\n    orderAmount: number;\n    shopperCurrencyCode: string;\n    storeCurrencyCode: string;\n}\n\nconst OrderSummaryTotal: FunctionComponent<OrderSummaryTotalProps & WithCurrencyProps> = ({\n    shopperCurrencyCode,\n    storeCurrencyCode,\n    orderAmount,\n    currency,\n}) => {\n\n    const hasDifferentCurrency = shopperCurrencyCode !== storeCurrencyCode;\n    const label = <Fragment>\n        { hasDifferentCurrency ?\n            <TranslatedString id=\"cart.estimated_total_text\" /> :\n            <TranslatedString id=\"cart.total_text\" /> }\n        { ` (${shopperCurrencyCode})` }\n    </Fragment>;\n\n    return (\n        <Fragment>\n            <OrderSummaryPrice\n                amount={ orderAmount }\n                className=\"cart-priceItem--total\"\n                label={ label }\n                superscript={ hasDifferentCurrency ? '*' : undefined }\n                testId=\"cart-total\"\n            />\n            { hasDifferentCurrency && currency && <p\n                className=\"cart-priceItem--totalNote\"\n                data-test=\"cart-price-item-total-note\"\n            >\n                <TranslatedString\n                    data={ {\n                        total: currency.toStoreCurrency(orderAmount),\n                        code: storeCurrencyCode,\n                    } }\n                    id=\"cart.billed_amount_text\"\n                />\n            </p> }\n        </Fragment>\n    );\n};\n\nexport default withCurrency(OrderSummaryTotal);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronUp: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronUp);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import { CustomItem } from '@bigcommerce/checkout-sdk';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromCustom(item: CustomItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedListPrice,\n        name: item.name,\n    };\n}\n\nexport default mapFromCustom;\n","import { DigitalItem, PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode } from 'react';\n\nexport default function getOrderSummaryItemImage(item: DigitalItem | PhysicalItem): ReactNode {\n    if (!item.imageUrl) {\n        return;\n    }\n\n    return <img\n        alt={ item.name }\n        data-test=\"cart-item-image\"\n        src={ item.imageUrl }\n    />;\n}\n","import { DigitalItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { TranslatedString } from '../locale';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemOption, OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromDigital(item: DigitalItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        productOptions: [\n            ...(item.options || []).map(option => ({\n                testId: 'cart-item-product-option',\n                content: `${option.name} ${option.value}`,\n            })),\n            getDigitalItemDescription(item),\n        ],\n    };\n}\n\nfunction getDigitalItemDescription(item: DigitalItem): OrderSummaryItemOption {\n    if (!item.downloadPageUrl) {\n        return {\n            testId: 'cart-item-digital-product',\n            content: <TranslatedString id=\"cart.digital_item_text\" />,\n        };\n    }\n\n    return {\n        testId: 'cart-item-digital-product-download',\n        content:\n            <a\n                href={ item.downloadPageUrl }\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n            >\n                <TranslatedString id=\"cart.downloads_action\" />\n            </a>,\n    };\n}\n\nexport default mapFromDigital;\n","import { GiftCertificateItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { IconGiftCertificate } from '../ui/icon';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromGiftCertificate(item: GiftCertificateItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: 1,\n        amount: item.amount,\n        name: item.name,\n        image:\n            <span\n                className=\"productImage-giftCertificate\"\n                data-test=\"cart-item-gift-certificate\"\n            >\n                <IconGiftCertificate />\n            </span>,\n    };\n}\n\nexport default mapFromGiftCertificate;\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromPhysical(item: PhysicalItem): OrderSummaryItemProps {\n    // FIXME: add type in Checkout SDK\n    const comparisonPrice = (item as PhysicalItem & { comparisonPrice: number }).comparisonPrice;\n\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.listPrice < comparisonPrice ? item.extendedSalePrice : item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        productOptions: (item.options || []).map(option => ({\n            testId: 'cart-item-product-option',\n            content: `${option.name} ${option.value}`,\n        })),\n    };\n}\n\nexport default mapFromPhysical;\n","import classNames from 'classnames';\nimport React, { memo, FunctionComponent, ReactNode } from 'react';\n\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryItemProps {\n    id: string | number;\n    amount: number;\n    quantity: number;\n    name: string;\n    amountAfterDiscount?: number;\n    image?: ReactNode;\n    productOptions?: OrderSummaryItemOption[];\n}\n\nexport interface OrderSummaryItemOption {\n    testId: string;\n    content: ReactNode;\n}\n\nconst OrderSummaryItem: FunctionComponent<OrderSummaryItemProps> = ({\n    amount,\n    amountAfterDiscount,\n    image,\n    name,\n    productOptions,\n    quantity,\n}) => (\n    <div className=\"product\" data-test=\"cart-item\">\n        <figure className=\"product-column product-figure\">\n            { image }\n        </figure>\n\n        <div className=\"product-column product-body\">\n            <h5\n                className=\"product-title optimizedCheckout-contentPrimary\"\n                data-test=\"cart-item-product-title\"\n            >\n                { `${quantity} x ${name}` }\n            </h5>\n\n            <ul\n                className=\"product-options optimizedCheckout-contentSecondary\"\n                data-test=\"cart-item-product-options\"\n            >\n                { (productOptions || []).map((option, index) =>\n                    <li\n                        className=\"product-option\"\n                        data-test={ option.testId }\n                        key={ index }\n                    >\n                        { option.content }\n                    </li>\n                ) }\n            </ul>\n        </div>\n\n        <div className=\"product-column product-actions\">\n            <div\n                className={ classNames(\n                    'product-price',\n                    'optimizedCheckout-contentPrimary',\n                    { 'product-price--beforeDiscount': amountAfterDiscount && amountAfterDiscount !== amount }\n                ) }\n                data-test=\"cart-item-product-price\"\n            >\n                <ShopperCurrency amount={ amount } />\n            </div>\n\n            { amountAfterDiscount && amountAfterDiscount !== amount && <div\n                className=\"product-price\"\n                data-test=\"cart-item-product-price--afterDiscount\"\n            >\n                <ShopperCurrency amount={ amountAfterDiscount } />\n            </div> }\n        </div>\n    </div>\n);\n\nexport default memo(OrderSummaryItem);\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\nimport React, { Fragment, ReactNode } from 'react';\n\nimport { TranslatedString } from '../locale';\nimport { IconChevronDown, IconChevronUp } from '../ui/icon';\n\nimport getItemsCount from './getItemsCount';\nimport mapFromCustom from './mapFromCustom';\nimport mapFromDigital from './mapFromDigital';\nimport mapFromGiftCertificate from './mapFromGiftCertificate';\nimport mapFromPhysical from './mapFromPhysical';\nimport OrderSummaryItem from './OrderSummaryItem';\n\nconst COLLAPSED_ITEMS_LIMIT = 4;\n\nexport interface OrderSummaryItemsProps {\n    items: LineItemMap;\n}\n\ninterface OrderSummaryItemsState {\n    isExpanded: boolean;\n}\n\nclass OrderSummaryItems extends React.Component<OrderSummaryItemsProps, OrderSummaryItemsState> {\n    constructor(props: OrderSummaryItemsProps) {\n        super(props);\n\n        this.state = {\n            isExpanded: false,\n        };\n    }\n\n    render(): ReactNode {\n        const { items } = this.props;\n        const { isExpanded } = this.state;\n\n        return (<Fragment>\n            <h3\n                className=\"cart-section-heading optimizedCheckout-contentPrimary\"\n                data-test=\"cart-count-total\"\n            >\n                <TranslatedString\n                    data={ { count: getItemsCount(items) } }\n                    id=\"cart.item_count_text\"\n                />\n            </h3>\n\n            <ul aria-live=\"polite\" className=\"productList\">\n                {\n                    [\n                        ...items.physicalItems\n                            .slice()\n                            .sort(item => item.variantId)\n                            .map(mapFromPhysical),\n                        ...items.giftCertificates\n                            .slice()\n                            .map(mapFromGiftCertificate),\n                        ...items.digitalItems\n                            .slice()\n                            .sort(item => item.variantId)\n                            .map(mapFromDigital),\n                        ...(items.customItems || [])\n                            .map(mapFromCustom),\n                    ]\n                        .slice(0, isExpanded ? undefined : COLLAPSED_ITEMS_LIMIT)\n                        .map(summaryItemProps =>\n                            <li\n                                className=\"productList-item is-visible\"\n                                key={ summaryItemProps.id }\n                            >\n                                <OrderSummaryItem { ...summaryItemProps } />\n                            </li>\n                        )\n                }\n            </ul>\n\n            { this.renderActions() }\n        </Fragment>);\n    }\n\n    private renderActions(): ReactNode {\n        const { isExpanded } = this.state;\n\n        if (this.getLineItemCount() < 5) {\n            return;\n        }\n\n        return (\n            <div className=\"cart-actions\">\n                <button\n                    className=\"button button--tertiary button--tiny optimizedCheckout-buttonSecondary\"\n                    onClick={ this.handleToggle }\n                    type=\"button\"\n                >\n                        { isExpanded ?\n                            <Fragment>\n                                <TranslatedString id=\"cart.see_less_action\" />\n                                <IconChevronUp />\n                            </Fragment> :\n                            <Fragment>\n                                <TranslatedString id=\"cart.see_all_action\" />\n                                <IconChevronDown />\n                            </Fragment> }\n                </button>\n            </div>\n        );\n    }\n\n    private getLineItemCount(): number {\n        const { items } = this.props;\n\n        return (items.customItems || []).length +\n            items.physicalItems.length +\n            items.digitalItems.length +\n            items.giftCertificates.length;\n    }\n\n    private handleToggle: () => void = () => {\n        const { isExpanded } = this.state;\n\n        this.setState({ isExpanded: !isExpanded });\n    };\n}\n\nexport default OrderSummaryItems;\n","import React, { memo, FunctionComponent } from 'react';\n\nimport { ShopperCurrency } from '../currency';\nimport { TranslatedString } from '../locale';\n\nimport OrderSummaryPrice, { OrderSummaryPriceProps } from './OrderSummaryPrice';\n\nexport interface OrderSummaryDiscountProps extends OrderSummaryPriceProps {\n    remaining?: number;\n    code?: string;\n    onRemoved?(code: string): void;\n}\n\nconst OrderSummaryDiscount: FunctionComponent<OrderSummaryDiscountProps> = ({\n    code,\n    remaining,\n    amount,\n    onRemoved,\n    ...rest\n}) => (\n    <OrderSummaryPrice\n        { ...rest }\n        { ...(onRemoved && {\n            onActionTriggered: () => code && onRemoved(code),\n            actionLabel: <TranslatedString id=\"cart.remove_action\" />,\n        }) }\n        amount={ -1 * (amount || 0) }\n    >\n        { remaining && remaining > 0 && <span\n            className=\"cart-priceItem-postFix optimizedCheckout-contentSecondary\"\n            data-test=\"cart-price-remaining\"\n        >\n            <TranslatedString id=\"cart.remaining_text\" />\n            { ': ' }\n            <ShopperCurrency amount={ remaining } />\n        </span> }\n\n        { code && <span\n            className=\"cart-priceItem-postFix optimizedCheckout-contentSecondary\"\n            data-test=\"cart-price-code\"\n        >\n            { code }\n        </span> }\n    </OrderSummaryPrice>\n);\n\nexport default memo(OrderSummaryDiscount);\n","import { Coupon, GiftCertificate, Tax } from '@bigcommerce/checkout-sdk';\nimport React, { memo, Fragment, FunctionComponent } from 'react';\n\nimport { TranslatedString } from '../locale';\n\nimport OrderSummaryDiscount from './OrderSummaryDiscount';\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummarySubtotalsProps {\n    coupons: Coupon[];\n    giftCertificates?: GiftCertificate[];\n    discountAmount?: number;\n    taxes?: Tax[];\n    shippingAmount?: number;\n    handlingAmount?: number;\n    storeCreditAmount?: number;\n    subtotalAmount: number;\n    onRemovedGiftCertificate?(code: string): void;\n    onRemovedCoupon?(code: string): void;\n}\n\nconst OrderSummarySubtotals: FunctionComponent<OrderSummarySubtotalsProps> = ({\n    discountAmount,\n    giftCertificates,\n    taxes,\n    shippingAmount,\n    subtotalAmount,\n    handlingAmount,\n    storeCreditAmount,\n    coupons,\n    onRemovedGiftCertificate,\n    onRemovedCoupon,\n}) => {\n    return (<Fragment>\n        <OrderSummaryPrice\n            amount={ subtotalAmount }\n            className=\"cart-priceItem--subtotal\"\n            label={ <TranslatedString id=\"cart.subtotal_text\" /> }\n            testId=\"cart-subtotal\"\n        />\n\n        { (coupons || [])\n            .map((coupon, index) =>\n                <OrderSummaryDiscount\n                    amount={ coupon.discountedAmount }\n                    code={ coupon.code }\n                    key={ index }\n                    label={ coupon.displayName }\n                    onRemoved={ onRemovedCoupon }\n                    testId=\"cart-coupon\"\n                />\n        ) }\n\n        { !!discountAmount && <OrderSummaryDiscount\n            amount={ discountAmount }\n            label={ <TranslatedString id=\"cart.discount_text\" /> }\n            testId=\"cart-discount\"\n        /> }\n\n        { (giftCertificates || [])\n            .map((giftCertificate, index) =>\n                <OrderSummaryDiscount\n                    amount={ giftCertificate.used }\n                    code={ giftCertificate.code }\n                    key={ index }\n                    label={ <TranslatedString id=\"cart.gift_certificate_text\" /> }\n                    onRemoved={ onRemovedGiftCertificate }\n                    remaining={ giftCertificate.remaining }\n                    testId=\"cart-gift-certificate\"\n                />\n        ) }\n\n        <OrderSummaryPrice\n            amount={ shippingAmount }\n            label={ <TranslatedString id=\"cart.shipping_text\" /> }\n            testId=\"cart-shipping\"\n            zeroLabel={ <TranslatedString id=\"cart.free_text\" /> }\n        />\n\n        { !!handlingAmount && <OrderSummaryPrice\n            amount={ handlingAmount }\n            label={ <TranslatedString id=\"cart.handling_text\" /> }\n            testId=\"cart-handling\"\n        /> }\n\n        { (taxes || [])\n            .map((tax, index) =>\n                <OrderSummaryPrice\n                    amount={ tax.amount }\n                    key={ index }\n                    label={ tax.name }\n                    testId=\"cart-taxes\"\n                />\n         ) }\n\n        { !!storeCreditAmount && <OrderSummaryDiscount\n            amount={ storeCreditAmount }\n            label={ <TranslatedString id=\"cart.store_credit_text\" /> }\n            testId=\"cart-store-credit\"\n        /> }\n    </Fragment>);\n};\n\nexport default memo(OrderSummarySubtotals);\n","import React, { FunctionComponent } from 'react';\n\nconst IconGiftCertificate: FunctionComponent = () => (\n    <svg\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path d=\"M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 0 0-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z\" />\n    </svg>\n);\n\nexport default IconGiftCertificate;\n","import React, { Component, Fragment, MouseEventHandler, ReactNode } from 'react';\n\nexport interface ModalTriggerProps {\n    children(props: { onClick: MouseEventHandler }): ReactNode;\n    modal(props: ModalTriggerModalProps): ReactNode;\n}\n\nexport interface ModalTriggerModalProps {\n    isOpen: boolean;\n    onRequestClose(): void;\n}\n\nexport interface ModalTriggerState {\n    isOpen: boolean;\n}\n\nexport default class ModalTrigger extends Component<ModalTriggerProps, ModalTriggerState> {\n    state = {\n        isOpen: false,\n    };\n\n    private canHandleEvent: boolean = false;\n\n    componentDidMount(): void {\n        this.canHandleEvent = true;\n    }\n\n    componentWillUnmount(): void {\n        this.canHandleEvent = false;\n    }\n\n    render() {\n        const { children, modal } = this.props;\n        const { isOpen } = this.state;\n\n        return (\n            <Fragment>\n                { children({ onClick: this.handleOpen }) }\n\n                { modal({\n                    isOpen,\n                    onRequestClose: this.handleClose,\n                }) }\n            </Fragment>\n        );\n    }\n\n    private handleOpen: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: true,\n        });\n    };\n\n    private handleClose: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: false,\n        });\n    };\n}\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getLineItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    return physicalItems.length +\n        digitalItems.length +\n        giftCertificates.length +\n        (customItems || []).length;\n}\n","import { LineItemMap, ShopperCurrency as ShopperCurrencyType, StoreCurrency } from '@bigcommerce/checkout-sdk';\nimport React, { Fragment, FunctionComponent, ReactNode } from 'react';\n\nimport { TranslatedString } from '../locale';\nimport { IconClose } from '../ui/icon';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport OrderSummaryItems from './OrderSummaryItems';\nimport OrderSummarySection from './OrderSummarySection';\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport OrderSummaryTotal from './OrderSummaryTotal';\n\nexport interface OrderSummaryDrawerProps {\n    additionalLineItems?: ReactNode;\n    lineItems: LineItemMap;\n    total: number;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    isOpen: boolean;\n    headerLink?: ReactNode;\n    onRequestClose?(): void;\n    onAfterOpen?(): void;\n}\n\nconst OrderSummaryModal: FunctionComponent<OrderSummaryDrawerProps & OrderSummarySubtotalsProps> = ({\n    additionalLineItems,\n    children,\n    onRequestClose,\n    onAfterOpen,\n    storeCurrency,\n    shopperCurrency,\n    isOpen,\n    headerLink,\n    lineItems,\n    total,\n    ...orderSummarySubtotalsProps\n}) => (\n<Modal\n    additionalBodyClassName=\"cart-modal-body optimizedCheckout-orderSummary\"\n    additionalHeaderClassName=\"cart-modal-header optimizedCheckout-orderSummary\"\n    header={ renderHeader({ headerLink, onRequestClose }) }\n    isOpen={ isOpen }\n    onAfterOpen={ onAfterOpen }\n    onRequestClose={ onRequestClose }\n>\n    <OrderSummarySection>\n        <OrderSummaryItems items={ lineItems } />\n    </OrderSummarySection>\n    <OrderSummarySection>\n        <OrderSummarySubtotals\n            { ...orderSummarySubtotalsProps }\n        />\n        { additionalLineItems }\n    </OrderSummarySection>\n    <OrderSummarySection>\n        <OrderSummaryTotal\n            orderAmount={ total }\n            shopperCurrencyCode={ shopperCurrency.code }\n            storeCurrencyCode={ storeCurrency.code }\n        />\n    </OrderSummarySection>\n</Modal>\n);\n\nconst renderHeader: FunctionComponent<{\n    headerLink: ReactNode;\n    onRequestClose?(): void;\n}> = ({\n    onRequestClose,\n    headerLink,\n}) => (<Fragment>\n    <a\n        className=\"cart-modal-close\"\n        href=\"javascript:void(0);\"\n        onClick={ onRequestClose }\n    >\n        <span className=\"is-srOnly\">\n            <TranslatedString id=\"common.close_action\" />\n        </span>\n        <IconClose />\n    </a>\n    <ModalHeader additionalClassName=\"cart-modal-title\">\n        <TranslatedString id=\"cart.cart_heading\" />\n    </ModalHeader>\n\n    { headerLink }\n</Fragment>);\n\nexport default OrderSummaryModal;\n","import {\n    LineItemMap,\n    ShopperCurrency as ShopperCurrencyType,\n    StoreCurrency\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { memo, useCallback, FunctionComponent, ReactNode } from 'react';\n\nimport { ShopperCurrency } from '../currency';\nimport { TranslatedString } from '../locale';\nimport { IconGiftCertificate } from '../ui/icon';\nimport { ModalTrigger } from '../ui/modal';\n\nimport getItemsCount from './getItemsCount';\nimport getLineItemsCount from './getLineItemsCount';\nimport OrderSummaryModal from './OrderSummaryModal';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport interface OrderSummaryDrawerProps {\n    lineItems: LineItemMap;\n    total: number;\n    headerLink: ReactNode;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    additionalLineItems?: ReactNode;\n}\n\nconst OrderSummaryDrawer: FunctionComponent<OrderSummaryDrawerProps & OrderSummarySubtotalsProps> = ({\n    additionalLineItems,\n    coupons,\n    discountAmount,\n    giftCertificates,\n    handlingAmount,\n    headerLink,\n    lineItems,\n    onRemovedCoupon,\n    onRemovedGiftCertificate,\n    shippingAmount,\n    shopperCurrency,\n    storeCreditAmount,\n    storeCurrency,\n    subtotalAmount,\n    taxes,\n    total,\n}) => {\n    const renderModal = useCallback(props => (\n        <OrderSummaryModal\n            { ...props }\n            additionalLineItems={ additionalLineItems }\n            coupons={ coupons }\n            discountAmount={ discountAmount }\n            giftCertificates={ giftCertificates }\n            handlingAmount={ handlingAmount }\n            headerLink={ headerLink }\n            lineItems={ lineItems }\n            onRemovedCoupon={ onRemovedCoupon }\n            onRemovedGiftCertificate={ onRemovedGiftCertificate }\n            shippingAmount={ shippingAmount }\n            shopperCurrency={ shopperCurrency }\n            storeCreditAmount={ storeCreditAmount }\n            storeCurrency={ storeCurrency }\n            subtotalAmount={ subtotalAmount }\n            taxes={ taxes }\n            total={ total }\n        />\n    ), [\n        additionalLineItems,\n        coupons,\n        discountAmount,\n        giftCertificates,\n        handlingAmount,\n        headerLink,\n        lineItems,\n        onRemovedCoupon,\n        onRemovedGiftCertificate,\n        shippingAmount,\n        shopperCurrency,\n        storeCreditAmount,\n        storeCurrency,\n        subtotalAmount,\n        taxes,\n        total,\n    ]);\n\n    return <ModalTrigger modal={ renderModal }>\n        { ({ onClick }) => <div\n            className=\"cartDrawer optimizedCheckout-orderSummary\"\n            onClick={ onClick }\n        >\n            <figure\n                className={ classNames(\n                    'cartDrawer-figure',\n                    { 'cartDrawer-figure--stack': getLineItemsCount(lineItems) > 1 }\n                ) }\n            >\n                <div className=\"cartDrawer-imageWrapper\">\n                    { getImage(lineItems) }\n                </div>\n            </figure>\n            <div className=\"cartDrawer-body\">\n                <h3 className=\"cartDrawer-items optimizedCheckout-headingPrimary\">\n                    <TranslatedString\n                        data={ { count: getItemsCount(lineItems) } }\n                        id=\"cart.item_count_text\"\n                    />\n                </h3>\n                <a>\n                    <TranslatedString id=\"cart.show_details_action\" />\n                </a>\n            </div>\n            <div className=\"cartDrawer-actions\">\n                <h3 className=\"cartDrawer-total optimizedCheckout-headingPrimary\">\n                    <ShopperCurrency amount={ total } />\n                </h3>\n            </div>\n        </div> }\n    </ModalTrigger>;\n};\n\nfunction getImage(lineItems: LineItemMap): ReactNode {\n    const productWithImage = lineItems.physicalItems[0] || lineItems.digitalItems[0];\n\n    if (productWithImage && productWithImage.imageUrl) {\n        return <img\n            alt={ productWithImage.name }\n            data-test=\"cart-item-image\"\n            src={ productWithImage.imageUrl }\n        />;\n    }\n\n    if (lineItems.giftCertificates.length) {\n        return <IconGiftCertificate />;\n    }\n}\n\nexport default memo(OrderSummaryDrawer);\n"],"sourceRoot":""}