{"version":3,"sources":["webpack://checkout/../src/index.ts","webpack://checkout/../src/script-loader.ts","webpack://checkout/../src/create-script-loader.ts","webpack://checkout/../src/stylesheet-loader.ts","webpack://checkout/../src/create-stylesheet-loader.ts","webpack://checkout/../src/get-script-loader.ts","webpack://checkout/../src/get-stylesheet-loader.ts"],"names":["script_loader_1","__webpack_require__","exports","ScriptLoader","default","create_script_loader_1","createScriptLoader","get_script_loader_1","getScriptLoader","stylesheet_loader_1","StylesheetLoader","create_stylesheet_loader_1","createStylesheetLoader","get_stylesheet_loader_1","getStylesheetLoader","this","_scripts","_preloadedScripts","prototype","loadScript","src","_this","Promise","resolve","reject","script","document","createElement","onload","event","onreadystatechange","onerror","async","body","appendChild","loadScripts","urls","promise","events","preloadScripts","then","forEach","url","push","preloadScript","options","preloadedScript","_a","prefetch","as","rel","href","head","all","map","_stylesheets","_preloadedStylesheets","loadStylesheet","stylesheet","prepend","children","insertBefore","loadStylesheets","preloadStylesheet","preloadedStylesheet","preloadStylesheets","instance"],"mappings":"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","file":"transients~billing~shipping-46401423.js","sourcesContent":["export { default as ScriptLoader } from './script-loader';\nexport { default as createScriptLoader } from './create-script-loader';\nexport { default as getScriptLoader } from './get-script-loader';\n\nexport { default as StylesheetLoader } from './stylesheet-loader';\nexport { default as createStylesheetLoader } from './create-stylesheet-loader';\nexport { default as getStylesheetLoader } from './get-stylesheet-loader';\n","export interface PreloadScriptOptions {\n    prefetch: boolean;\n}\n\nexport default class ScriptLoader {\n    private _scripts: { [key: string]: Promise<Event> } = {};\n    private _preloadedScripts: { [key: string]: Promise<Event> } = {};\n\n    loadScript(src: string): Promise<Event> {\n        if (!this._scripts[src]) {\n            this._scripts[src] = new Promise((resolve, reject) => {\n                const script = document.createElement('script') as LegacyHTMLScriptElement;\n\n                script.onload = event => resolve(event);\n                script.onreadystatechange = event => resolve(event);\n                script.onerror = event => {\n                    delete this._scripts[src];\n                    reject(event);\n                };\n                script.async = true;\n                script.src = src;\n\n                document.body.appendChild(script);\n            });\n        }\n\n        return this._scripts[src];\n    }\n\n    loadScripts(urls: string[]): Promise<Event[]> {\n        const events: Event[] = [];\n        let promise: Promise<Event> | undefined;\n\n        return this.preloadScripts(urls)\n            .then(() => {\n                urls.forEach(url => {\n                    if (promise) {\n                        promise = promise.then(() => this.loadScript(url));\n                    } else {\n                        promise = this.loadScript(url);\n                    }\n\n                    promise = promise.then(event => {\n                        events.push(event);\n\n                        return event;\n                    });\n                });\n\n                return promise;\n            })\n            .then(() => events);\n    }\n\n    preloadScript(url: string, options?: PreloadScriptOptions): Promise<Event> {\n        if (!this._preloadedScripts[url]) {\n            this._preloadedScripts[url] = new Promise((resolve, reject) => {\n                const preloadedScript = document.createElement('link');\n                const { prefetch = false } = options || {};\n\n                preloadedScript.as = 'script';\n                preloadedScript.rel = prefetch ? 'prefetch' : 'preload';\n                preloadedScript.href = url;\n\n                preloadedScript.onload = event => {\n                    resolve(event);\n                };\n\n                preloadedScript.onerror = event => {\n                    delete this._preloadedScripts[url];\n                    reject(event);\n                };\n\n                document.head.appendChild(preloadedScript);\n            });\n        }\n\n        return this._preloadedScripts[url];\n    }\n\n    preloadScripts(urls: string[], options?: PreloadScriptOptions): Promise<Event[]> {\n        return Promise.all(urls.map(url => this.preloadScript(url, options)));\n    }\n}\n\ninterface LegacyHTMLScriptElement extends HTMLScriptElement {\n    // `onreadystatechange` is needed to support legacy IE\n    onreadystatechange(this: HTMLElement, event: Event): any;\n}\n","import ScriptLoader from './script-loader';\n\nexport default function createScriptLoader(): ScriptLoader {\n    return new ScriptLoader();\n}\n","export interface LoadStylesheetOptions {\n    prepend: boolean;\n}\n\nexport interface PreloadStylesheetOptions {\n    prefetch: boolean;\n}\n\nexport default class StylesheetLoader {\n    private _stylesheets: { [key: string]: Promise<Event> } = {};\n    private _preloadedStylesheets: { [key: string]: Promise<Event> } = {};\n\n    loadStylesheet(src: string, options?: LoadStylesheetOptions): Promise<Event> {\n        if (!this._stylesheets[src]) {\n            this._stylesheets[src] = new Promise((resolve, reject) => {\n                const stylesheet = document.createElement('link');\n                const { prepend = false } = options || {};\n\n                stylesheet.onload = event => resolve(event);\n                stylesheet.onerror = event => {\n                    delete this._stylesheets[src];\n                    reject(event);\n                };\n                stylesheet.rel = 'stylesheet';\n                stylesheet.href = src;\n\n                if (prepend && document.head.children[0]) {\n                    document.head.insertBefore(stylesheet, document.head.children[0]);\n                } else {\n                    document.head.appendChild(stylesheet);\n                }\n            });\n        }\n\n        return this._stylesheets[src];\n    }\n\n    loadStylesheets(urls: string[], options?: LoadStylesheetOptions): Promise<Event[]> {\n        return Promise.all(urls.map(url => this.loadStylesheet(url, options)));\n    }\n\n    preloadStylesheet(url: string, options?: PreloadStylesheetOptions): Promise<Event> {\n        if (!this._preloadedStylesheets[url]) {\n            this._preloadedStylesheets[url] = new Promise((resolve, reject) => {\n                const preloadedStylesheet = document.createElement('link');\n                const { prefetch = false } = options || {};\n\n                preloadedStylesheet.as = 'style';\n                preloadedStylesheet.rel = prefetch ? 'prefetch' : 'preload';\n                preloadedStylesheet.href = url;\n\n                preloadedStylesheet.onload = event => {\n                    resolve(event);\n                };\n\n                preloadedStylesheet.onerror = event => {\n                    delete this._preloadedStylesheets[url];\n                    reject(event);\n                };\n\n                document.head.appendChild(preloadedStylesheet);\n            });\n        }\n\n        return this._preloadedStylesheets[url];\n    }\n\n    preloadStylesheets(urls: string[], options?: PreloadStylesheetOptions): Promise<Event[]> {\n        return Promise.all(urls.map(url => this.preloadStylesheet(url, options)));\n    }\n}\n","import StylesheetLoader from './stylesheet-loader';\n\nexport default function createStylesheetLoader(): StylesheetLoader {\n    return new StylesheetLoader();\n}\n","import createScriptLoader from './create-script-loader';\nimport ScriptLoader from './script-loader';\n\nlet instance: ScriptLoader;\n\nexport default function getScriptLoader(): ScriptLoader {\n    if (!instance) {\n        instance = createScriptLoader();\n    }\n\n    return instance;\n}\n","import createStylesheetLoader from './create-stylesheet-loader';\nimport StylesheetLoader from './stylesheet-loader';\n\nlet instance: StylesheetLoader;\n\nexport default function getStylesheetLoader(): StylesheetLoader {\n    if (!instance) {\n        instance = createStylesheetLoader();\n    }\n\n    return instance;\n}\n"],"sourceRoot":""}