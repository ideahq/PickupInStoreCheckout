{"version":3,"sources":["webpack://checkout/../src/script-loader.ts","webpack://checkout/../src/create-script-loader.ts","webpack://checkout/../src/stylesheet-loader.ts","webpack://checkout/../src/create-stylesheet-loader.ts","webpack://checkout/../src/index.ts","webpack://checkout/../src/get-script-loader.ts","webpack://checkout/../src/get-stylesheet-loader.ts"],"names":["ScriptLoader","this","_scripts","_preloadedScripts","prototype","loadScript","src","_this","Promise","resolve","reject","script","document","createElement","onload","event","onreadystatechange","onerror","async","body","appendChild","loadScripts","urls","promise","events","preloadScripts","then","forEach","url","push","preloadScript","options","preloadedScript","_a","prefetch","as","rel","href","head","all","map","script_loader_1","__webpack_require__","exports","default","StylesheetLoader","_stylesheets","_preloadedStylesheets","loadStylesheet","stylesheet","prepend","children","insertBefore","loadStylesheets","preloadStylesheet","preloadedStylesheet","preloadStylesheets","stylesheet_loader_1","create_script_loader_1","createScriptLoader","get_script_loader_1","getScriptLoader","create_stylesheet_loader_1","createStylesheetLoader","get_stylesheet_loader_1","getStylesheetLoader","instance"],"mappings":"4JAIA,IAAAA,EAAA,oBAAAA,IACYC,KAAAC,SAA8C,GAC9CD,KAAAE,kBAAuD,GA6EnE,OA3EIH,EAAAI,UAAAC,WAAA,SAAWC,GAAX,IAAAC,EAAAN,KAkBI,OAjBKA,KAAKC,SAASI,KACfL,KAAKC,SAASI,GAAO,IAAIE,QAAQ,SAACC,EAASC,GACvC,IAAMC,EAASC,SAASC,cAAc,UAEtCF,EAAOG,OAAS,SAAAC,GAAS,OAAAN,EAAQM,IACjCJ,EAAOK,mBAAqB,SAAAD,GAAS,OAAAN,EAAQM,IAC7CJ,EAAOM,QAAU,SAAAF,UACNR,EAAKL,SAASI,GACrBI,EAAOK,IAEXJ,EAAOO,OAAQ,EACfP,EAAOL,IAAMA,EAEbM,SAASO,KAAKC,YAAYT,MAI3BV,KAAKC,SAASI,IAGzBN,EAAAI,UAAAiB,YAAA,SAAYC,GAAZ,IAEQC,EAFRhB,EAAAN,KACUuB,EAAkB,GAGxB,OAAOvB,KAAKwB,eAAeH,GACtBI,KAAK,WAeF,OAdAJ,EAAKK,QAAQ,SAAAC,GAOTL,GALIA,EADAA,EACUA,EAAQG,KAAK,WAAM,OAAAnB,EAAKF,WAAWuB,KAEnCrB,EAAKF,WAAWuB,IAGZF,KAAK,SAAAX,GAGnB,OAFAS,EAAOK,KAAKd,GAELA,MAIRQ,IAEVG,KAAK,WAAM,OAAAF,KAGpBxB,EAAAI,UAAA0B,cAAA,SAAcF,EAAaG,GAA3B,IAAAxB,EAAAN,KAuBI,OAtBKA,KAAKE,kBAAkByB,KACxB3B,KAAKE,kBAAkByB,GAAO,IAAIpB,QAAQ,SAACC,EAASC,GAChD,IAAMsB,EAAkBpB,SAASC,cAAc,QACvCoB,GAAAF,GAAA,IAAAG,gBAAA,IAAWD,GAAXA,EAERD,EAAgBG,GAAK,SACrBH,EAAgBI,IAAMF,EAAW,WAAa,UAC9CF,EAAgBK,KAAOT,EAEvBI,EAAgBlB,OAAS,SAAAC,GACrBN,EAAQM,IAGZiB,EAAgBf,QAAU,SAAAF,UACfR,EAAKJ,kBAAkByB,GAC9BlB,EAAOK,IAGXH,SAAS0B,KAAKlB,YAAYY,MAI3B/B,KAAKE,kBAAkByB,IAGlC5B,EAAAI,UAAAqB,eAAA,SAAeH,EAAgBS,GAA/B,IAAAxB,EAAAN,KACI,OAAOO,QAAQ+B,IAAIjB,EAAKkB,IAAI,SAAAZ,GAAO,OAAArB,EAAKuB,cAAcF,EAAKG,OAEnE/B,EA/EA,G,gGCJA,IAAAyC,EAAAC,EAAA,MAEAC,EAAAC,QAAA,WACI,OAAO,IAAIH,EAAAG,U,mFCKf,IAAAC,EAAA,oBAAAA,IACY5C,KAAA6C,aAAkD,GAClD7C,KAAA8C,sBAA2D,GA4DvE,OA1DIF,EAAAzC,UAAA4C,eAAA,SAAe1C,EAAayB,GAA5B,IAAAxB,EAAAN,KAsBI,OArBKA,KAAK6C,aAAaxC,KACnBL,KAAK6C,aAAaxC,GAAO,IAAIE,QAAQ,SAACC,EAASC,GAC3C,IAAMuC,EAAarC,SAASC,cAAc,QAClCoB,GAAAF,GAAA,IAAAmB,eAAA,IAAUjB,GAAVA,EAERgB,EAAWnC,OAAS,SAAAC,GAAS,OAAAN,EAAQM,IACrCkC,EAAWhC,QAAU,SAAAF,UACVR,EAAKuC,aAAaxC,GACzBI,EAAOK,IAEXkC,EAAWb,IAAM,aACjBa,EAAWZ,KAAO/B,EAEd4C,GAAWtC,SAAS0B,KAAKa,SAAS,GAClCvC,SAAS0B,KAAKc,aAAaH,EAAYrC,SAAS0B,KAAKa,SAAS,IAE9DvC,SAAS0B,KAAKlB,YAAY6B,MAK/BhD,KAAK6C,aAAaxC,IAG7BuC,EAAAzC,UAAAiD,gBAAA,SAAgB/B,EAAgBS,GAAhC,IAAAxB,EAAAN,KACI,OAAOO,QAAQ+B,IAAIjB,EAAKkB,IAAI,SAAAZ,GAAO,OAAArB,EAAKyC,eAAepB,EAAKG,OAGhEc,EAAAzC,UAAAkD,kBAAA,SAAkB1B,EAAaG,GAA/B,IAAAxB,EAAAN,KAuBI,OAtBKA,KAAK8C,sBAAsBnB,KAC5B3B,KAAK8C,sBAAsBnB,GAAO,IAAIpB,QAAQ,SAACC,EAASC,GACpD,IAAM6C,EAAsB3C,SAASC,cAAc,QAC3CoB,GAAAF,GAAA,IAAAG,gBAAA,IAAWD,GAAXA,EAERsB,EAAoBpB,GAAK,QACzBoB,EAAoBnB,IAAMF,EAAW,WAAa,UAClDqB,EAAoBlB,KAAOT,EAE3B2B,EAAoBzC,OAAS,SAAAC,GACzBN,EAAQM,IAGZwC,EAAoBtC,QAAU,SAAAF,UACnBR,EAAKwC,sBAAsBnB,GAClClB,EAAOK,IAGXH,SAAS0B,KAAKlB,YAAYmC,MAI3BtD,KAAK8C,sBAAsBnB,IAGtCiB,EAAAzC,UAAAoD,mBAAA,SAAmBlC,EAAgBS,GAAnC,IAAAxB,EAAAN,KACI,OAAOO,QAAQ+B,IAAIjB,EAAKkB,IAAI,SAAAZ,GAAO,OAAArB,EAAK+C,kBAAkB1B,EAAKG,OAEvEc,EA9DA,G,gGCRA,IAAAY,EAAAf,EAAA,MAEAC,EAAAC,QAAA,WACI,OAAO,IAAIa,EAAAb,U,mFCHf,IAAAH,EAAAC,EAAA,MAASC,EAAA3C,aAAAyC,EAAAG,QACT,IAAAc,EAAAhB,EAAA,MAASC,EAAAgB,mBAAAD,EAAAd,QACT,IAAAgB,EAAAlB,EAAA,MAASC,EAAAkB,gBAAAD,EAAAhB,QAET,IAAAa,EAAAf,EAAA,MAASC,EAAAE,iBAAAY,EAAAb,QACT,IAAAkB,EAAApB,EAAA,MAASC,EAAAoB,uBAAAD,EAAAlB,QACT,IAAAoB,EAAAtB,EAAA,MAASC,EAAAsB,oBAAAD,EAAApB,S,mFCNT,IAGIsB,EAHJR,EAAAhB,EAAA,MAKAC,EAAAC,QAAA,WAKI,OAJKsB,IACDA,EAAWR,EAAAd,WAGRsB,I,mFCVX,IAGIA,EAHJJ,EAAApB,EAAA,MAKAC,EAAAC,QAAA,WAKI,OAJKsB,IACDA,EAAWJ,EAAAlB,WAGRsB","file":"transients~billing~shipping-4bde6486.js","sourcesContent":["export interface PreloadScriptOptions {\n    prefetch: boolean;\n}\n\nexport default class ScriptLoader {\n    private _scripts: { [key: string]: Promise<Event> } = {};\n    private _preloadedScripts: { [key: string]: Promise<Event> } = {};\n\n    loadScript(src: string): Promise<Event> {\n        if (!this._scripts[src]) {\n            this._scripts[src] = new Promise((resolve, reject) => {\n                const script = document.createElement('script') as LegacyHTMLScriptElement;\n\n                script.onload = event => resolve(event);\n                script.onreadystatechange = event => resolve(event);\n                script.onerror = event => {\n                    delete this._scripts[src];\n                    reject(event);\n                };\n                script.async = true;\n                script.src = src;\n\n                document.body.appendChild(script);\n            });\n        }\n\n        return this._scripts[src];\n    }\n\n    loadScripts(urls: string[]): Promise<Event[]> {\n        const events: Event[] = [];\n        let promise: Promise<Event> | undefined;\n\n        return this.preloadScripts(urls)\n            .then(() => {\n                urls.forEach(url => {\n                    if (promise) {\n                        promise = promise.then(() => this.loadScript(url));\n                    } else {\n                        promise = this.loadScript(url);\n                    }\n\n                    promise = promise.then(event => {\n                        events.push(event);\n\n                        return event;\n                    });\n                });\n\n                return promise;\n            })\n            .then(() => events);\n    }\n\n    preloadScript(url: string, options?: PreloadScriptOptions): Promise<Event> {\n        if (!this._preloadedScripts[url]) {\n            this._preloadedScripts[url] = new Promise((resolve, reject) => {\n                const preloadedScript = document.createElement('link');\n                const { prefetch = false } = options || {};\n\n                preloadedScript.as = 'script';\n                preloadedScript.rel = prefetch ? 'prefetch' : 'preload';\n                preloadedScript.href = url;\n\n                preloadedScript.onload = event => {\n                    resolve(event);\n                };\n\n                preloadedScript.onerror = event => {\n                    delete this._preloadedScripts[url];\n                    reject(event);\n                };\n\n                document.head.appendChild(preloadedScript);\n            });\n        }\n\n        return this._preloadedScripts[url];\n    }\n\n    preloadScripts(urls: string[], options?: PreloadScriptOptions): Promise<Event[]> {\n        return Promise.all(urls.map(url => this.preloadScript(url, options)));\n    }\n}\n\ninterface LegacyHTMLScriptElement extends HTMLScriptElement {\n    // `onreadystatechange` is needed to support legacy IE\n    onreadystatechange(this: HTMLElement, event: Event): any;\n}\n","import ScriptLoader from './script-loader';\n\nexport default function createScriptLoader(): ScriptLoader {\n    return new ScriptLoader();\n}\n","export interface LoadStylesheetOptions {\n    prepend: boolean;\n}\n\nexport interface PreloadStylesheetOptions {\n    prefetch: boolean;\n}\n\nexport default class StylesheetLoader {\n    private _stylesheets: { [key: string]: Promise<Event> } = {};\n    private _preloadedStylesheets: { [key: string]: Promise<Event> } = {};\n\n    loadStylesheet(src: string, options?: LoadStylesheetOptions): Promise<Event> {\n        if (!this._stylesheets[src]) {\n            this._stylesheets[src] = new Promise((resolve, reject) => {\n                const stylesheet = document.createElement('link');\n                const { prepend = false } = options || {};\n\n                stylesheet.onload = event => resolve(event);\n                stylesheet.onerror = event => {\n                    delete this._stylesheets[src];\n                    reject(event);\n                };\n                stylesheet.rel = 'stylesheet';\n                stylesheet.href = src;\n\n                if (prepend && document.head.children[0]) {\n                    document.head.insertBefore(stylesheet, document.head.children[0]);\n                } else {\n                    document.head.appendChild(stylesheet);\n                }\n            });\n        }\n\n        return this._stylesheets[src];\n    }\n\n    loadStylesheets(urls: string[], options?: LoadStylesheetOptions): Promise<Event[]> {\n        return Promise.all(urls.map(url => this.loadStylesheet(url, options)));\n    }\n\n    preloadStylesheet(url: string, options?: PreloadStylesheetOptions): Promise<Event> {\n        if (!this._preloadedStylesheets[url]) {\n            this._preloadedStylesheets[url] = new Promise((resolve, reject) => {\n                const preloadedStylesheet = document.createElement('link');\n                const { prefetch = false } = options || {};\n\n                preloadedStylesheet.as = 'style';\n                preloadedStylesheet.rel = prefetch ? 'prefetch' : 'preload';\n                preloadedStylesheet.href = url;\n\n                preloadedStylesheet.onload = event => {\n                    resolve(event);\n                };\n\n                preloadedStylesheet.onerror = event => {\n                    delete this._preloadedStylesheets[url];\n                    reject(event);\n                };\n\n                document.head.appendChild(preloadedStylesheet);\n            });\n        }\n\n        return this._preloadedStylesheets[url];\n    }\n\n    preloadStylesheets(urls: string[], options?: PreloadStylesheetOptions): Promise<Event[]> {\n        return Promise.all(urls.map(url => this.preloadStylesheet(url, options)));\n    }\n}\n","import StylesheetLoader from './stylesheet-loader';\n\nexport default function createStylesheetLoader(): StylesheetLoader {\n    return new StylesheetLoader();\n}\n","export { default as ScriptLoader } from './script-loader';\nexport { default as createScriptLoader } from './create-script-loader';\nexport { default as getScriptLoader } from './get-script-loader';\n\nexport { default as StylesheetLoader } from './stylesheet-loader';\nexport { default as createStylesheetLoader } from './create-stylesheet-loader';\nexport { default as getStylesheetLoader } from './get-stylesheet-loader';\n","import createScriptLoader from './create-script-loader';\nimport ScriptLoader from './script-loader';\n\nlet instance: ScriptLoader;\n\nexport default function getScriptLoader(): ScriptLoader {\n    if (!instance) {\n        instance = createScriptLoader();\n    }\n\n    return instance;\n}\n","import createStylesheetLoader from './create-stylesheet-loader';\nimport StylesheetLoader from './stylesheet-loader';\n\nlet instance: StylesheetLoader;\n\nexport default function getStylesheetLoader(): StylesheetLoader {\n    if (!instance) {\n        instance = createStylesheetLoader();\n    }\n\n    return instance;\n}\n"],"sourceRoot":""}